---
import { getCollection } from 'astro:content';
import type { Page } from "astro";
import type { CollectionEntry } from "astro:content";
import Layout from '../../layouts/Layout.astro';
import BlogList from '../../components/sections/blog/BlogList.astro';
import Pagination from '../../components/common/Pagination.astro';
import BlogsComingSoon from '../../components/layouts/BlogsComingSoon.astro';

export async function getStaticPaths({ paginate }) {
    const blogs = await getCollection("blogs");
    const latestBlogs = blogs.sort((a, b) =>
        new Date(b.data.datetime).getTime() - new Date(a.data.datetime).getTime()
    );

    // Only generate pages if there are blogs
    if (latestBlogs.length === 0) {
        return [];
    }

    // Only generate paginated routes if there are more than 5 blogs
    // This prevents conflicts with individual blog slug routes
    if (latestBlogs.length <= 5) {
        return [];
    }

    return paginate(latestBlogs, {
        pageSize: 5,
    });
}

export interface Props {
  page: Page<CollectionEntry<"blogs">>;
}

const { page } = Astro.props;
const blogs = await getCollection("blogs");
---

<Layout title={`Blogs`}>
    {blogs.length === 0 ? (
        <BlogsComingSoon />
    ) : (
        <>
            <BlogList blogs={page?.data || []} />
            <Pagination page={page} />
        </>
    )}
</Layout>